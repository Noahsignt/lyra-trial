import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from 'next/image';

import { api } from "~/utils/api";

import Header from "~/components/Header";
import LoadingSpinner from "~/components/LoadingSpinner";
import PostView from "~/components/PostView";

import { createServerSideHelpers } from '@trpc/react-query/server';
import {
  GetStaticPaths,
  GetStaticPropsContext,
  InferGetStaticPropsType,
} from 'next';
import { NextPage} from "next";
import superjson from 'superjson';
import { appRouter } from '~/server/api/root';
import { db } from '~/server/db';

export async function getStaticProps( context: GetStaticPropsContext<{ id: string }>, ) {
  const helpers = createServerSideHelpers({
    router: appRouter,
    ctx: {db, session: null},
    transformer: superjson, 
  });
  const id = Number(context.params!.id);
  await helpers.post.getPostById.prefetch({ id });

  return {
    props: {
      trpcState: helpers.dehydrate(),
      id,
    },
    revalidate: 1,
  };
}

export const getStaticPaths: GetStaticPaths =  () => {
  return {
    paths: [],
    fallback: 'blocking',
  };
};

type PageProps = InferGetStaticPropsType<typeof getStaticProps>;

const Home : NextPage<PageProps> = (props) => {
  const { data: sessionData } = useSession();
  const { data: postData } = api.post.getPostById.useQuery({ id: props.id })
  
  if(!postData) {
    return <div>404</div>
  }

  return (
    <>
      <Head>
        <title>{`${postData.title}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="flex min-h-screen flex-col justify-start items-center py-8 px-16 gap-4">
        <div className="bg-white p-4 rounded-md h-1/2 w-3/4 flex gap-8 flex flex-col">
          <div className="flex flex-col">
            <h1 className="text-4xl font-bold">
              {postData.title}
            </h1>
            <h2 className="italic">
              {postData.intro}
            </h2>
          </div>
          <div>
            <Image src={postData.img} alt={`${postData.name}'s profile picture`} width={24} height={24} className="rounded-full"/>
            <div>
              <h2>{postData.name}</h2>
              <h3>{postData.createdAt.toLocaleString()}</h3>
            </div>
          </div>
          <div>
            {postData.content}
          </div>
        </div>
      </main>
    </>
  );
}

export default Home;
